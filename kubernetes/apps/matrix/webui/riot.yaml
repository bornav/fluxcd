---
apiVersion: v1
data:
  config.json: |
    {
      "default_server_config": {
        "m.homeserver": {
          "base_url": "https://matrix.cloud.icecoldlair.com"
        },
        "m.identity_server": {
          "base_url": "https://vector.im"
        }
      },
      "default_theme": "dark",
      "UIFeature": {
        "feedback": "true",
        "registration": "false"
      },
      "setting_defaults": {
        "MessageComposerInput.showStickersButton": true,
        "MessageComposerInput.showPollsButton": true,
        "feature_custom_themes": true,
        "feature_jump_to_date": true,
        "feature_bridge_state": true,
        "alwaysShowTimestamps": true,
        "autoplayGifs": true,
        "enableSyntaxHighlightLanguageDetection": true,
        "scrollToBottomOnMessageSent": false,
        "ctrlFForSearch": true,
        "developerMode": true
      }

    }
  # config.json: |
  #   {
  #       "default_server_config": {
  #           "m.homeserver": {
  #               "base_url": "https://matrix.icecoldlair.com",
  #               "server_name": "matrix.icecoldlair.com"
  #           },
  #           "m.identity_server": {
  #               "base_url": "https://vector.im"
  #           }
  #       },
  #       "disable_identity_server": false,
  #       "disable_custom_urls": false,
  #       "disable_guests": true,
  #       "disable_login_language_selector": false,
  #       "disable_3pid_login": false,
  #       "brand": "Riot",
  #       "integrations_ui_url": "https://scalar.vector.im/",
  #       "integrations_rest_url": "https://scalar.vector.im/api",
  #       "integrations_jitsi_widget_url": "https://scalar.vector.im/api/widgets/jitsi.html",
  #       "bug_report_endpoint_url": "https://riot.im/bugreports/submit",
  #       "defaultCountryCode": "GB",
  #       "showLabsSettings": true,
  #       "features": {
  #           "feature_pinning": "labs",
  #           "feature_custom_status": "labs",
  #           "feature_custom_tags": "labs",
  #           "feature_state_counters": "labs",
  #           "feature_many_integration_managers": "labs",
  #           "feature_mjolnir": "labs",
  #           "feature_dm_verification": "labs",
  #           "feature_cross_signing": "labs"
  #       },
  #       "default_federate": true,
  #       "welcomePageUrl": "home.html",
  #       "default_theme": "light",
  #       "roomDirectory": {
  #           "servers": [
  #               "example.com",
  #               "matrix.org"
  #           ]
  #       },
  #       "piwik": {
  #           "url": "https://piwik.riot.im/",
  #           "whitelistedHSUrls": ["https://matrix.org"],
  #           "whitelistedISUrls": ["https://vector.im", "https://matrix.org"],
  #           "siteId": 1
  #       },
  #       "enable_presence_by_hs_url": {
  #           "https://matrix.org": false
  #       }
  #   }
kind: ConfigMap
metadata:
  labels:
    app: element
  name: element-config
  namespace: matrix
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: element
  name: element
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: element
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: element
  name: element
spec:
  replicas: 1
  selector:
    matchLabels:
      app: element
  template:
    metadata:
      labels:
        app: element
    spec:
      containers:
      - image: vectorim/element-web:v1.11.31
        imagePullPolicy: IfNotPresent
        name: element-web
        readinessProbe:
          tcpSocket:
            port: 80
        resources:
          requests: 
            memory: "1Mi"
            cpu: "1m"
          limits:
            memory: "3000Mi"
            cpu: "2500m"
        volumeMounts:
        - mountPath: /app/config.json
          name: element-config
          subPath: config.json
      restartPolicy: Always
      volumes:
      - configMap:
          name: element-config
        name: element-config
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: element
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`element.icecoldlair.com`)
      kind: Rule
      services:
        - name: element
          port: 80
          namespace: matrix
      #middlewares:
      #  - name: default-headers
      #    namespace: default
  tls:
    secretName: icecoldlair-com-prod
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: element-cloud
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`element.cloud.icecoldlair.com`)
      kind: Rule
      services:
        - name: element
          port: 80
          namespace: matrix
      #middlewares:
      #  - name: default-headers
      #    namespace: default
  tls:
    secretName: cloud-icecoldlair-com-prod