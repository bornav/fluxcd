apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name kubernetes-dashboard-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: *name
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: *name
    spec:
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - image: quay.io/gambol99/keycloak-proxy:v2.3.0
        name: kubernetes-dashboard-proxy
        args:
          - --listen=0.0.0.0:3000
          - --discovery-url=https://keycloak.cloud.icylair.com/realms/master
          - --client-id=kubernetes
          - --client-secret=
          - --redirection-url=https://kubernetes-dashboard.cloud.icylair.com
          - --enable-refresh-tokens=true
          - --encryption-key=    # 32 bytes string
          - --upstream-url=https://kubernetes-dashboard-web.observability.svc.cluster.local:8000
          - --resources=uri=/*
        ports:
        - containerPort: 3000
        livenessProbe:
          httpGet:
            path: /oauth/health
            port: 3000
          initialDelaySeconds: 3
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /oauth/health
            port: 3000
          initialDelaySeconds: 3
          timeoutSeconds: 2
---
apiVersion: v1
kind: Service
metadata:
  name: kubernetes-dashboard-proxy
  namespace: kube-system
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
  selector:
    app: kubernetes-dashboard-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kubernetes-dashboard-proxy
  namespace: kube-system
spec:
  ingressClassName: traefik-external
  rules:
  - host: kubernetes-dashboard.cloud.icylair.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kubernetes-dashboard-proxy
            port:
              number: 3000