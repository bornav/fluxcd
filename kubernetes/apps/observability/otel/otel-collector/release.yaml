---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: opentelemetry-collector
spec:
  interval: 15m
  chart:
    spec:
      chart: opentelemetry-collector
      version: 0.127.4
      sourceRef:
        kind: HelmRepository
        name: open-telemetry
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    image:
      repository: "otel/opentelemetry-collector-k8s"
    command:
      name: otelcol-k8s
    mode: daemonset ## needed for logs to be on all nodes, since it is a host path mount
    # replicaCount: 2
    configMap:
      create: false
      existingName: otelcol
    service:
      enabled: true
      type: LoadBalancer
    ################################# logs
    extraVolumes:
    - name: pod-logs
      hostPath:
        path: /var/log/pods
        type: Directory
    extraVolumeMounts:
    - name: pod-logs
      mountPath: /var/log/pods
      hostPath:
        path: /var/log/pods
        type: Directory
    podAnnotations:
      reloader.stakater.com/auto: "true"
    tolerations: 
      - key: node-role.kubernetes.io/control-plane
        value: "true"
        effect: NoSchedule
    ################################# logs
      # loadBalancerIP: 10.2.11.233
    # # Handles basic configuration of components that
    # # also require k8s modifications to work correctly.
    # # .Values.config can be used to modify/add to a preset
    # # component configuration, but CANNOT be used to remove
    # # preset configuration. If you require removal of any
    # # sections of a preset configuration, you cannot use
    # # the preset. Instead, configure the component manually in
    # # .Values.config and use the other fields supplied in the
    # # values.yaml to configure k8s as necessary.
    # presets:
    #   # Configures the collector to collect logs.
    #   # Adds the filelog receiver to the logs pipeline
    #   # and adds the necessary volumes and volume mounts.
    #   # Best used with mode = daemonset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#filelog-receiver for details on the receiver.
    #   logsCollection:
    #     enabled: false
    #     includeCollectorLogs: false
    #     # Enabling this writes checkpoints in /var/lib/otelcol/ host directory.
    #     # Note this changes collector's user to root, so that it can write to host directory.
    #     storeCheckpoints: false
    #     # The maximum bytes size of the recombined field.
    #     # Once the size exceeds the limit, all received entries of the source will be combined and flushed.
    #     maxRecombineLogSize: 102400
    #   # Configures the collector to collect host metrics.
    #   # Adds the hostmetrics receiver to the metrics pipeline
    #   # and adds the necessary volumes and volume mounts.
    #   # Best used with mode = daemonset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#host-metrics-receiver for details on the receiver.
    #   hostMetrics:
    #     enabled: true
    #   # Configures the Kubernetes Processor to add Kubernetes metadata.
    #   # Adds the k8sattributes processor to all the pipelines
    #   # and adds the necessary rules to ClusteRole.
    #   # Best used with mode = daemonset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-attributes-processor for details on the receiver.
    #   kubernetesAttributes:
    #     enabled: true
    #     # When enabled the processor will extra all labels for an associated pod and add them as resource attributes.
    #     # The label's exact name will be the key.
    #     extractAllPodLabels: true
    #     # When enabled the processor will extra all annotations for an associated pod and add them as resource attributes.
    #     # The annotation's exact name will be the key.
    #     extractAllPodAnnotations: true
    #   # Configures the collector to collect node, pod, and container metrics from the API server on a kubelet..
    #   # Adds the kubeletstats receiver to the metrics pipeline
    #   # and adds the necessary rules to ClusteRole.
    #   # Best used with mode = daemonset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubeletstats-receiver for details on the receiver.
    #   kubeletMetrics:
    #     enabled: true
    #   # Configures the collector to collect kubernetes events.
    #   # Adds the k8sobject receiver to the logs pipeline
    #   # and collects kubernetes events by default.
    #   # Best used with mode = deployment or statefulset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-objects-receiver for details on the receiver.
    #   kubernetesEvents:
    #     enabled: true
    #   # Configures the Kubernetes Cluster Receiver to collect cluster-level metrics.
    #   # Adds the k8s_cluster receiver to the metrics pipeline
    #   # and adds the necessary rules to ClusteRole.
    #   # Best used with mode = deployment or statefulset.
    #   # See https://opentelemetry.io/docs/kubernetes/collector/components/#kubernetes-cluster-receiver for details on the receiver.
    #   clusterMetrics:
    #     enabled: true