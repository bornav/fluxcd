apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: devops-tools
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-server
  template:
    metadata:
      labels:
        app: jenkins-server
    spec:
      securityContext:
        fsGroup: 0
        runAsUser: 0
      serviceAccountName: jenkins-admin
      # initContainers: //TODO after change the security context above for both to 1000
      #   - name: install-dependencies
      #     image: jenkins/jenkins:2.405
      #     securityContext:
      #       runAsUser: 0
      #     command: ["sh", "-c", "apt-get update && apt install -y build-essential"]
      #     volumeMounts:
      #       - name: jenkins-data
      #         mountPath: /var/jenkins_home
      containers:
        - name: jenkins
          image: jenkins/jenkins:2.503
          command: [
              'sh',
              '-c',
              'sh /dependencies.sh && /usr/local/bin/jenkins.sh',
            ] # //TODO: remove
          resources:
            limits:
              memory: '10Gi'
              cpu: '2500m'
            requests:
              memory: '500Mi'
              cpu: '1m'
          ports:
            - name: httpport
              containerPort: 8080
            - name: jnlpport
              containerPort: 50000
          livenessProbe:
            httpGet:
              path: '/login'
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: '/login'
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          volumeMounts:
            - name: jenkins-data
              mountPath: /var/jenkins_home
            - name: jenkins-dependencies-configmap
              mountPath: /dependencies.sh
              subPath: dependencies.sh
      volumes:
        - name: jenkins-data
          persistentVolumeClaim:
            claimName: jenkins-pv-claim
        - name: jenkins-dependencies-configmap
          configMap:
            name: jenkins-dependencies

---
apiVersion: v1
data:
  dependencies.sh: |
    #!/bin/sh
    echo 'deb [trusted=yes] https://repo.goreleaser.com/apt/ /' | tee /etc/apt/sources.list.d/goreleaser.list
    apt-get update
    apt install -y build-essential goreleaser
    curl -L https://go.dev/dl/go1.20.4.linux-arm64.tar.gz -o go1.20.4.linux-arm64.tar.gz
    tar -C /usr/local -xzf go1.20.4.linux-arm64.tar.gz
    cp /usr/local/go/bin/go /usr/bin/
    #curl -fsSL https://get.docker.com -o get-docker.sh
    #sh get-docker.sh
kind: ConfigMap
metadata:
  name: jenkins-dependencies
  namespace: devops-tools
