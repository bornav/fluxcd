---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: matrix-synapse
  labels:
    app: matrix-synapse
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: matrix-synapse
  template:
    metadata:
      annotations:
        prometheus.io/path: /_synapse/metrics
        prometheus.io/port: '9090'
        prometheus.io/scrape: 'true'
      labels:
        app: matrix-synapse
    spec:
      nodeSelector:
        node-arch: arm64
      # shareProcessNamespace: true
      initContainers:
        - name: grab-scripts
          image: mrnonz/alpine-git-curl:alpine3.16
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              cd scripts
              git clone --branch v1.5.0 https://github.com/matrix-org/synapse-s3-storage-provider.git
          volumeMounts:
            - mountPath: /scripts
              name: scripts
      containers:
        # cd /scripts/synapse-s3-storage-provider/scripts
        # pip install humanize tqdm
        # python s3_media_upload upload /data/media_store/local_store matrix --storage-class STANDARD
        - image: matrixdotorg/synapse:v1.135.0
          name: matrix-synapse
          command:
            - sh
            - -c
            # - sleep infinity
            - | 
              ./start.py generate
              curl https://raw.githubusercontent.com/devture/matrix-synapse-shared-secret-auth/master/shared_secret_authenticator.py -o  /usr/local/lib/python$(python --version|cut -d' ' -f2- | cut -d'.' -f1-2)/shared_secret_authenticator.py
              pip install boto3
              export PYTHONPATH=$PYTHONPATH:/scripts/synapse-s3-storage-provider/
              ./start.py
          ports:
          - name: http
            protocol: TCP
            containerPort: 8008
          - name: https
            protocol: TCP
            containerPort: 8448
          - name: replication
            protocol: TCP
            containerPort: 9092
          - name: httpreplication
            protocol: TCP
            containerPort: 9093
          env:
            - name: SYNAPSE_CACHE_FACTOR # overwrites config file
              value: '5.00'
            - name: SYNAPSE_CONFIG_PATH
              value: '/synapse/homeserver.yaml'
            - name: SYNAPSE_SERVER_NAME
              value: 'matrix.icylair.com'
            - name: SYNAPSE_REPORT_STATS
              value: 'no'
          imagePullPolicy: IfNotPresent
          # livenessProbe:
          #   httpGet:
          #     path: /_matrix/client/versions
          #     port: 8008
          #     scheme: HTTP
          #   initialDelaySeconds: 120
          # readinessProbe:
          #   httpGet:
          #     path: /_matrix/client/versions
          #     port: 8008
          #     scheme: HTTP
          #   initialDelaySeconds: 10
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '6Gi'
          volumeMounts:
            - mountPath: /scripts
              name: scripts
            - mountPath: /data
              name: matrix-synapse-data
            - mountPath: /synapse/homeserver.yaml
              name: matrix-synapse-config
              subPath: homeserver
            - mountPath: /synapse/bridge_whatsapp.yaml
              name: matrix-synapse-config
              subPath: bridge_whatsapp
            - mountPath: /synapse/bridge_meta.yaml
              name: matrix-synapse-config
              subPath: bridge_meta
            - mountPath: /synapse/doublepuppet.yaml
              name: matrix-synapse-config
              subPath: doublepuppet
        # - name: mautrix-bridge-whatsapp
        #   command:
        #     - sh
        #     - -c
        #     # - sleep infinity
        #     - /usr/bin/mautrix-whatsapp --no-update
        #     # - cp -n -p /config/config.yaml /data/config.yaml && if [ -d /data/registration.yaml ] ; then chmod 0700 /data/registration.yaml ; fi && /docker-run.sh
        #   image: dock.mau.dev/mautrix/whatsapp:v0.12.3
        #   imagePullPolicy: IfNotPresent
        #   resources:
        #     requests:
        #       memory: '1Mi'
        #       cpu: '1m'
        #     limits:
        #       memory: '6Gi'
        #       cpu: '2500m'
        #   volumeMounts:
        #   #   - mountPath: /data
        #   #     name: matrix-bridges
        #   #     subPath: whatsapp
        #   #   # - name: matrix-bridge-whatsapp-config
        #   #   #   mountPath: /config/config.yaml
        #   #   #   subPath: config.yaml
        #     - name: matrix-synapse-bridges
        #       mountPath: /data/config.yaml
        #       subPath: config.yaml
        #     - name: matrix-synapse-config
        #       mountPath: /data/registration.yaml
        #       subPath: bridge_whatsapp.yaml
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
      volumes:
        # - name: matrix-synapse-data
        #   persistentVolumeClaim:
        #     claimName: matrix-synapse-data
        - name: scripts
          emptyDir: {}
        - name: matrix-synapse-data
          emptyDir: {}
      #   # - name: matrix-synapse-keys
      #   #   secret:
      #   #     secretName: matrix-synapse-keys
        - name: matrix-synapse-config
          configMap:
            name: matrix-synapse
            defaultMode: 0777
        - name: matrix-synapse-bridges
          configMap:
            name: matrix-synapse-bridges
            defaultMode: 0777
      #     # configMap:
      #     #   name: matrix-synapse
      #     #   defaultMode: 0777
      #   - name: matrix-bridges
      #     persistentVolumeClaim:
      #       claimName: matrix-bridges-data
      #   - name: sync-oneway
      #     secret:
      #       secretName: sync-oneway
      #       defaultMode: 0777
      #   - name: prepare-data
      #     secret:
      #       secretName: prepare-data
      #       defaultMode: 0777
      #   - name: matrix-bridge-whatsapp-config
      #     configMap:
      #       name: matrix-bridge-whatsapp-config
      #   - name: matrix-bridge-whatsapp-config2
      #     secret:
      #       secretName: matrix-bridge-whatsapp-config2
      #       defaultMode: 0777
status: {}
---
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name mautrix-bridge-whatsapp
  labels:
    app: *name
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
        mautrix-bridge: "true"
    spec:
      nodeSelector:
        node-arch: arm64
      # shareProcessNamespace: true
      containers:
        - name: *name
          command:
            - sh
            - -c
            # - sleep infinity
            - /usr/bin/mautrix-whatsapp --no-update
          image: dock.mau.dev/mautrix/whatsapp:v0.12.3
          imagePullPolicy: IfNotPresent
          ports:
          - name: whatsapp
            protocol: TCP
            containerPort: 29318
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '6Gi'
              cpu: '2500m'
          volumeMounts:
            - name: matrix-synapse-bridges
              mountPath: /data/config.yaml
              subPath: whatsapp
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
      volumes:
        - name: matrix-synapse-bridges
          configMap:
            name: matrix-synapse-bridges
            defaultMode: 0777
        - name: matrix-synapse
          configMap:
            name: matrix-synapse
            defaultMode: 0777
status: {}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/instrumenta/kubernetes-json-schema/master/v1.14.0/deployment.json
apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name mautrix-bridge-meta
  labels:
    app: *name
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
        mautrix-bridge: "true"
    spec:
      nodeSelector:
        node-arch: arm64
      # shareProcessNamespace: true
      containers:
        - name: *name
          command:
            - sh
            - -c
            # - sleep infinity
            - /usr/bin/mautrix-meta --no-update
          image: dock.mau.dev/mautrix/meta:v0.5.2
          imagePullPolicy: IfNotPresent
          ports:
          - name: meta
            protocol: TCP
            containerPort: 29319
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '6Gi'
              cpu: '2500m'
          volumeMounts:
            - name: matrix-synapse-bridges
              mountPath: /data/config.yaml
              subPath: meta
      restartPolicy: Always
      securityContext:
        fsGroup: 0
        runAsGroup: 0
        runAsUser: 0
      volumes:
        - name: matrix-synapse-bridges
          configMap:
            name: matrix-synapse-bridges
            defaultMode: 0777
        - name: matrix-synapse
          configMap:
            name: matrix-synapse
            defaultMode: 0777
status: {}
#to get the key "curl -XPOST -d '{"type":"m.login.password","identifier":{"type": "m.id.user", "user": "<username>"},"password":"<pass>","initial_device_display_name":"a fancy bridge"}' https://matrix.cloud.icylair.com/_matrix/client/v3/login"