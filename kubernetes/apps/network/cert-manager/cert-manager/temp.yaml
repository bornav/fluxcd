apiVersion: v1
kind: Secret
metadata:
  name: cloud-icecoldlair-com-staging
  namespace: nginx
  labels:
    controller.cert-manager.io/fao: 'true'
  annotations:
    cert-manager.io/alt-names: '*.cloud.icecoldlair.com,cloud.icecoldlair.com'
    cert-manager.io/certificate-name: cloud.icecoldlair.com-staging
    cert-manager.io/common-name: '*.cloud.icecoldlair.com'
    cert-manager.io/ip-sans: ''
    cert-manager.io/issuer-group: ''
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-staging
    cert-manager.io/uri-sans: ''
    reflector.v1.k8s.emberstack.com/secret-reflection-allowed: 'true'
    reflector.v1.k8s.emberstack.com/secret-reflection-allowed-namespaces: nginx
    reflector.v1.k8s.emberstack.com/secret-reflection-auto-enabled: 'true'
    reflector.v1.k8s.emberstack.com/secret-reflection-auto-namespaces: nginx
  managedFields:
    - manager: cert-manager-certificates-issuing
      operation: Apply
      apiVersion: v1
      time: '2023-07-28T19:07:16Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            f:cert-manager.io/alt-names: {}
            f:cert-manager.io/certificate-name: {}
            f:cert-manager.io/common-name: {}
            f:cert-manager.io/ip-sans: {}
            f:cert-manager.io/issuer-group: {}
            f:cert-manager.io/issuer-kind: {}
            f:cert-manager.io/issuer-name: {}
            f:cert-manager.io/uri-sans: {}
            f:reflector.v1.k8s.emberstack.com/secret-reflection-allowed: {}
            f:reflector.v1.k8s.emberstack.com/secret-reflection-allowed-namespaces: {}
            f:reflector.v1.k8s.emberstack.com/secret-reflection-auto-enabled: {}
            f:reflector.v1.k8s.emberstack.com/secret-reflection-auto-namespaces: {}
          f:labels:
            f:controller.cert-manager.io/fao: {}
        f:type: {}
  selfLink: /api/v1/namespaces/cert-manager/secrets/cloud-icecoldlair-com-staging
data:
  tls.crt: >-
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZRVENDQkNtZ0F3SUJBZ0lUQVBvWTVpZ3RRZFExT2Z1T2VDQk1SSEVHYkRBTkJna3Foa2lHOXcwQkFRc0YKQURCWk1Rc3dDUVlEVlFRR0V3SlZVekVnTUI0R0ExVUVDaE1YS0ZOVVFVZEpUa2NwSUV4bGRDZHpJRVZ1WTNKNQpjSFF4S0RBbUJnTlZCQU1USHloVFZFRkhTVTVIS1NCQmNuUnBabWxqYVdGc0lFRndjbWxqYjNRZ1VqTXdIaGNOCk1qTXdOekk0TVRnd056RXlXaGNOTWpNeE1ESTJNVGd3TnpFeFdqQWlNU0F3SGdZRFZRUUREQmNxTG1Oc2IzVmsKTG1salpXTnZiR1JzWVdseUxtTnZiVENDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBTXRzTGdjYWxLT2RnM2lYR3IvdnZxdVJVT3NYSGJPTjFVWFJZUHlpM3dCUkZXZ1hUYWNPL2J0RXBGaG1tL3Q4CmdKK0JtMmxtVWpQc2s2dWZKWUZEL09aSVdjTmhwd2dWbGhTYTlNQVR5TTJmOTFUbjN4VVYxUjVoa3BLNVpuNlUKWHlWYlNZZ0ErU0VpQ2ZxNE5qL3EvRkFZdWlYVzB2Z0R2Y0pHeHBBWkdqVW1LcE9FSFlJbW4wU2lFN3E5Qm1NMApTV3hDVUlFdURabnJvVjRCMm40ZmJJSXMyWUZXS2lMcXYrYUhMRG5jTGRkQ2oyckZaVGlrOTEwNEJIeU02SjVPCkxxa3ZPYnNaczlnQ20xcld0UW1HM25sYmYyT3BYOXFuYkJxa2ZSK0p2Z3RoWXVLY3FPVktDcmV0RmVieWxkOUsKbTY3QXlMTzBLNXlFWDcvR2ZPM1FkMVVDQXdFQUFhT0NBamN3Z2dJek1BNEdBMVVkRHdFQi93UUVBd0lGb0RBZApCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WCkhRNEVGZ1FVRUlBK1hITjIzNUxocU13eG1VcWZxZU4wNlpRd0h3WURWUjBqQkJnd0ZvQVUzbko2U044eHc2WlEKMzUrRkk5OVhOMHRkTG1Vd1hRWUlLd1lCQlFVSEFRRUVVVEJQTUNVR0NDc0dBUVVGQnpBQmhobG9kSFJ3T2k4dgpjM1JuTFhJekxtOHViR1Z1WTNJdWIzSm5NQ1lHQ0NzR0FRVUZCekFDaGhwb2RIUndPaTh2YzNSbkxYSXpMbWt1CmJHVnVZM0l1YjNKbkx6QTVCZ05WSFJFRU1qQXdnaGNxTG1Oc2IzVmtMbWxqWldOdmJHUnNZV2x5TG1OdmJZSVYKWTJ4dmRXUXVhV05sWTI5c1pHeGhhWEl1WTI5dE1CTUdBMVVkSUFRTU1Bb3dDQVlHWjRFTUFRSUJNSUlCQXdZSwpLd1lCQkFIV2VRSUVBZ1NCOUFTQjhRRHZBSFlBN2F1ZEhkMkRjNVdmOVNxSTVHdTB2TVBFekUxMmltRE0vMDQyCkxYKzQxbWdBQUFHSm5lWFUvQUFBQkFNQVJ6QkZBaUJvVkh1QWM5ZXlEVXZXbGc1c3poZ1ZPdTVJVnhkTkw3ekIKUmk4S3hCRURWZ0loQVB1VnhGaXlkN3lXTkY3K0hCTmJ0R2RiV281Uk9RMUMrNVFMWGtjaDAyVmdBSFVBc015RAo1YVg1Zld1dmZBbk1LRWtFaHlySDZJc1RMR05RdDhiOUp1RnNiSGNBQUFHSm5lWFUrUUFBQkFNQVJqQkVBaUJzCnNCNlFNMzJVRDMxOTdPVWsyeXYxTnRlRVpHU1FsTWdlT1kvcml5Ynp0QUlnTXlYVktMbVJvSjVkNGh3OTg2NUEKbzl5bFRERElKUC95Mk9EVms5UFFrcGd3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUxrOTcxSEhNM2Z2N25KbQowNEV6Y1RoaGR3VDdRRGNOdjhSSkVrOHE3b2ZQZXpGWUpnMU5hYTVOM2FhT0J4TGQ5NlZ5ekxpTGxpSlJFcjMwCjVnbE9CVDVoNXorV1UwOXRUSnd2QWlkYVNKS3ZkK2hZaituZHdGbU41MXdhM1RicWpFMmRuSzB5cmJURnEzakEKNitRTU12T25RTFhJOHoyRHZsNVVpUVVsNkpPYWtOaEZkNW44Q1BwQ0FXcVdCc3RzcVIycUx2NWs1L2hpS1RDcwplc1pxNW45SzllYXFNQkVuWWJBUTUrVSs1OWZZWWtIaStFSzhtOG52SURaRmxhNkFFU1ZOYVJJU2FpaDllVGtoCkIwaWt1cCt4SVE3L1BYL1dmRDdVbnhJZnZxbWxtaWc1aGlRQ2ZXUS9tRG1kT0pzTzdpOXBiSElPVjlZM0NiSEkKTjU5bGdIST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRld6Q0NBME9nQXdJQkFnSVFUZlFybGRIdW16cE1Mck03alJCZDFqQU5CZ2txaGtpRzl3MEJBUXNGQURCbQpNUXN3Q1FZRFZRUUdFd0pWVXpFek1ERUdBMVVFQ2hNcUtGTlVRVWRKVGtjcElFbHVkR1Z5Ym1WMElGTmxZM1Z5CmFYUjVJRkpsYzJWaGNtTm9JRWR5YjNWd01TSXdJQVlEVlFRREV4a29VMVJCUjBsT1J5a2dVSEpsZEdWdVpDQlEKWldGeUlGZ3hNQjRYRFRJd01Ea3dOREF3TURBd01Gb1hEVEkxTURreE5URTJNREF3TUZvd1dURUxNQWtHQTFVRQpCaE1DVlZNeElEQWVCZ05WQkFvVEZ5aFRWRUZIU1U1SEtTQk1aWFFuY3lCRmJtTnllWEIwTVNnd0pnWURWUVFECkV4OG9VMVJCUjBsT1J5a2dRWEowYVdacFkybGhiQ0JCY0hKcFkyOTBJRkl6TUlJQklqQU5CZ2txaGtpRzl3MEIKQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBdTZUUjgrNzRiNDZtT0UxRlV3QnJ2eHpFWUxjazNpYXNtS3JjUWtiKwpneS96OUp5N1FOSUFsMEI5cFZLcDRZVTc2Snd4RjVET1paaGk3dks3U2JDa0s2RmJIbHlVNUJpRFlJeGJiZnZPCkwvalZHcWRzU2pOYUpRVGczQzNYckpqYS9IQTRXQ0ZFTVZvVDJ3RFptOEFCQzFOK0lRZTdRNkZFcWM4TndtVFMKbm1tUlFtNFRRdnIwNkRQK3pnRksvTU51YnhXV0RTYlNLS1RINWltNWoyZlpmZytqL3RNMWJHYWN6Rld3OC9sUwpudWt5bjVKMkwrTkpZbmNsemtYb2g5bk1GbnlQbVZiZnlEUE9jNFkyNWFUelZvZUJLWGEvY1o1TU0rV2RkamRMCmJpV3ZtMTlmMXNZbjFhUmFBSXJrcHB2N2trbjgzdmN0aDhYQ0czOXFDMlp2YVFJREFRQUJvNElCRURDQ0FRd3cKRGdZRFZSMFBBUUgvQkFRREFnR0dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBUwpCZ05WSFJNQkFmOEVDREFHQVFIL0FnRUFNQjBHQTFVZERnUVdCQlRlY25wSTN6SERwbERmbjRVajMxYzNTMTB1ClpUQWZCZ05WSFNNRUdEQVdnQlMxODJYeS9yQUtraC83UEgzelJLQ3NZeVhERkRBMkJnZ3JCZ0VGQlFjQkFRUXEKTUNnd0pnWUlLd1lCQlFVSE1BS0dHbWgwZEhBNkx5OXpkR2N0ZURFdWFTNXNaVzVqY2k1dmNtY3ZNQ3NHQTFVZApId1FrTUNJd0lLQWVvQnlHR21oMGRIQTZMeTl6ZEdjdGVERXVZeTVzWlc1amNpNXZjbWN2TUNJR0ExVWRJQVFiCk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUJndDhUQVFFQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQ04KRExhbTl5TjBFRnh4bi8zcCtydVdPNm4vOWdvQ0FNNVBUNmNDNmZrak1zNHVhczZVR1hKanI1ajdQb1RRZjNDMQp2dXhpSUdSSkM2cXhWN3ljNlUwWCt3ME1qODVzSEk1RG5RVldONStEMWVyN21wMTNKSkEweGJBYkhhM1JsY3puCnkyUTgyWEt1aThXSHVXcmEwZ2IyS0xwZmJvWWoxR2hna2hyM2dhdTgzcEMvV1E4SGZrd2N2U3doSVlxVHF4b1oKVXE4SElmM004MnFTOWFLT1pFMENFbVN5UjF6WnFReEpVVDdlbU9VYXBrVU45cG9KOXpHYytGZ1JadmRybzBYQgp5cGhXWERhcU1ZcGgwRHhXLzEwaWc1ajR4bW1ORGpDUm1xSUtzS29XQTUyd0JUS0tYSzFuYTJ0eS9sVzVkaHRBCnhrejVyVlpGZDRzZ1M0SjBPK3ptNmQ1R1JrV3NOSjRrbm90R1hsOHZ0UzNYNDBLWGViM0E1Ky8zcDBxYUQyMTUKWHE4b1NOT1JmQjJvSTFrUXV5RUFKNXh2UFRkZndSbHlSRzNsRllvZHJSZzZwb1VCRC84Zk5UWE10enlkcFJneQp6VVFaaC8xOEY2Qi9pVzZjYmlSTjlyMkhraDA1T20rcTAvNncwRGRaZSs4WXJOcGZoU09ici8xZVZaYktHTUlZCnFLbXlaYkJOdTV5c0VOSUs1TVBjMTRtVWVLbUZqcE44NDBWUjV6dW5vVTUybHFwTER1YS9xSU04aWRrODZ4R1cKeHgybWw0M0RPL1lhL3RWWlZvazBtTzBUVWp6SklmUHF5dnI0NTVJc0l1dDRSbENSOUlxMEVEVHZlMi9ad0N1RwpoU2pwVFVGR1NpUXJSMkpLMkV2cCtvNkFFVFVrQkNPMWF3MFBwUUJQRFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlGVkRDQ0JEeWdBd0lCQWdJUkFPMWRXOGx0Kzk5TlBzMXFTWTNSczhjd0RRWUpLb1pJaHZjTkFRRUxCUUF3CmNURUxNQWtHQTFVRUJoTUNWVk14TXpBeEJnTlZCQW9US2loVFZFRkhTVTVIS1NCSmJuUmxjbTVsZENCVFpXTjEKY21sMGVTQlNaWE5sWVhKamFDQkhjbTkxY0RFdE1Dc0dBMVVFQXhNa0tGTlVRVWRKVGtjcElFUnZZM1J2Y21WawpJRVIxY21saGJpQlNiMjkwSUVOQklGZ3pNQjRYRFRJeE1ERXlNREU1TVRRd00xb1hEVEkwTURrek1ERTRNVFF3Ck0xb3daakVMTUFrR0ExVUVCaE1DVlZNeE16QXhCZ05WQkFvVEtpaFRWRUZIU1U1SEtTQkpiblJsY201bGRDQlQKWldOMWNtbDBlU0JTWlhObFlYSmphQ0JIY205MWNERWlNQ0FHQTFVRUF4TVpLRk5VUVVkSlRrY3BJRkJ5WlhSbApibVFnVUdWaGNpQllNVENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFMYmFnRWREClRhMVFnR0JXU1lreU1oc2NaWEVOT0JhVlJUTVgxaGNlSkVOZ3NMME1hNDlEM01pbEk0S1MzOG10a21kRjZjUFcKbkwrK2ZnZWhUMEZiUkhaZ2pPRXI4VUFONGpINm9tanJiVEQrK1ZabmVUc01WYUdhbVFtRGRGbDVnMWdZYWlnawprbXg4T2lDTzY4YTRRWGc0d1N5bjZpRGlwS1A4dXRzRSt4MUUyOFNBNzVIT1lxcGRyazRIR3h1VUx2bHIwM3daCkdUSWYvb1J0Mi9jK2RZbURvYUpoZ2UrR09yTEFFUUJ5TzcrOCt2ek93cE5BUEV4NkxXK2NyRUVaN2VCWGloNlYKUDE5c1RHeTN5ZnFLNXRQdFRkWFhDT1FNS0FwK2dDai9WQnlobUlyKzBpTkRDNTQwZ3R2VjMwM1dwY2J3bmtrTApZQzBGdDJjWVV5SHRrc3RPZlJjUk8rSzJjWm96b1N3VlB5QjgvSjlScGNSSzNqZ25YOWx1amZ3QS9wQWJQMEoyClVQUUZ4bVdGUlFuRmphcTZya3FiTkVCZ0x5K2tGTDFORXNSYnZGYktyUmk1Yll5MmxObXMyTkpQWnZkTlFiVC8KMmRCWkttSnF4SGt4Q3VPUUZqaEpRTmVPK05qbTFaMWlBVFMvM3J0czJ5WmxxWEtzeFFVek42dk5iRDhLblhSTQpFZU9YVVl2YlY0bHFmQ2Y4bVMxNFdFYlNpTXk4N0dCNVM5dWNTVjFYVXJsVEc1VUdjTVNaT0JjRVVwaXNSUEVtClFXVU9UV0lvRFE1Rk9pYS9HSStLaTUyM3IycnVFbWJtRzM3RUJTQlhkeElkbmRxcmp5K1FWQW1DZWJ5RHg5ZVYKRUdPSXBuMjZiVzVMS2VydW1KeGEvQ0ZCYUtpNGJSdm1kSlJMQWdNQkFBR2pnZkV3Z2U0d0RnWURWUjBQQVFILwpCQVFEQWdFR01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZMWHpaZkwrc0FxU0gvczhmZk5FCm9LeGpKY01VTUI4R0ExVWRJd1FZTUJhQUZBaFgyb25Ib2xONURFL2Q0SkNQZExyaUozTkVNRGdHQ0NzR0FRVUYKQndFQkJDd3dLakFvQmdnckJnRUZCUWN3QW9ZY2FIUjBjRG92TDNOMFp5MWtjM1F6TG1rdWJHVnVZM0l1YjNKbgpMekF0QmdOVkhSOEVKakFrTUNLZ0lLQWVoaHhvZEhSd09pOHZjM1JuTFdSemRETXVZeTVzWlc1amNpNXZjbWN2Ck1DSUdBMVVkSUFRYk1Ca3dDQVlHWjRFTUFRSUJNQTBHQ3lzR0FRUUJndDhUQVFFQk1BMEdDU3FHU0liM0RRRUIKQ3dVQUE0SUJBUUI3dFI4QjBlSVFTUzZNaFA1a3V2R3RoK2ROMDJEc0locjB5SnRrMmVoSWNQSXFTeFJSbUhHbAo0dTJjM1FsdkVwZVJEcDJ3N2VRZFJUbEkvV25OaFk0Sk9vZnBNZjJ6d0FCZ0JXdEF1MFZvb1FjWlpUcFFydWlnCkYvejZ4WWtCazNVSGtqZXF4ek1OM2QxRXFHdXN4Sm9xZ2RUb3VaNVg1UVRUSWVlOW5RM0xFaFduUlNYRHg3WTAKdHRSMUJHZmNkcUhvcE80SUJxQWhia0tSakY1emo3T0Q4Y0czNW9teXdVYlp0T0puZnRpSTBuRmNSYXhiWG8wdgpvRGZMRDBTNitBQzJSM3RLcHFqa05YNi85MWhyUkZnbFVha3lNY1pVL3hsZXFidjYrTHIzWUQ4UHNCVHViNmxJCm9aMmxTMzhmTDE4QW9uNDU4ZmJjMEJQSHRlbmZoS2o1Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: >-
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeTJ3dUJ4cVVvNTJEZUpjYXYrKytxNUZRNnhjZHM0M1ZSZEZnL0tMZkFGRVZhQmROCnB3Nzl1MFNrV0dhYiszeUFuNEdiYVdaU00reVRxNThsZ1VQODVraFp3MkduQ0JXV0ZKcjB3QlBJelovM1ZPZmYKRlJYVkhtR1NrcmxtZnBSZkpWdEppQUQ1SVNJSityZzJQK3I4VUJpNkpkYlMrQU85d2tiR2tCa2FOU1lxazRRZApnaWFmUktJVHVyMEdZelJKYkVKUWdTNE5tZXVoWGdIYWZoOXNnaXpaZ1ZZcUl1cS81b2NzT2R3dDEwS1Bhc1ZsCk9LVDNYVGdFZkl6b25rNHVxUzg1dXhtejJBS2JXdGExQ1liZWVWdC9ZNmxmMnFkc0dxUjlING0rQzJGaTRweW8KNVVvS3Q2MFY1dktWMzBxYnJzRElzN1FybklSZnY4Wjg3ZEIzVlFJREFRQUJBb0lCQUJkRGxQUDlCemk2LzlrZgp0dEJ5azZTOVpycXNGeHA4d3dKTUVzSnh3ZjBnU01seHVOQzlOeWxlalVrSzJ4WGt4RFQ1dHBOVVAxeHUxdWlPCnQ5UlR1UzJBNHJza2hOeTQwMFFpQUpHaThaa0tqVmVwZU9ySloya2xFWVUwTE5PWEZsYUlYUjF2dHc0aC9YQXQKOXc1U1NtN0NsUzlVcFNYMkQ1S1RVNHdSUXQwRy91cUQrc2RjSWpKNWZRdG9seG9FL2dQWVh2YU95aUhyLzhvVApsNm12bWQ1dlZqVjhXRVBwRUdFVzVCTEJtdm1qWHFqQVhtVmxTZGpGcHNkNG9ERzdXc3FsRURxNEtSMVRHaWU4ClFZSlRLSWM5V0ZXREUxTzJZT0NqYjUyQjhVaFoxeXNhRVRBTGJJWEl3ZjJaZjNUUlhGQzhOUUlDZzg0L3BHMGwKOC9XdDZiVUNnWUVBL0l3Q3RSLzFiMjhXcFNPZStZVFZCUXBDWWIvWkcrSXFQc0d5TEVENmtGRDF6QzdpcVpkWgptN2UxR25ZWDdieWJob3Fud1gvUjJiYUdLdUZudEhhQzBjZmpDcGJYdjEzVVQxZ1RNNGJQN3hMYU9TMHhiQ0ZyCkxYd1R1cUpiUWxtSHNVTzZ6ZUs4eG42SnlYTVcycHFacVVtSTMyNHdhYkFTbUpEUm82bDNENnNDZ1lFQXpqUTQKS3NFZGJQUHJrRTVQSFh0WnN0Q20veWNPb0p0ZUFEUksrZG5YMm5MMVljdlN0Q1YyanRqZjVhV200cVVLamk2OQovMVl4VDJGZi9rQllOZEVmSVQ1WUFhY3k1ZGVGcHQ4ZjlVZXJpRE9EcFVZcW1BNUxTWXg4ZGx0aDA3UjU1d0l6ClBWZHhhTzhUNzZOakRsdjk3aDlpcnZXc2k5UVRhblR0NlV4N2xQOENnWUVBaXgyQkhFOEhmeVBkZ0loWHVURlAKdXFBRkl4MXdOaWptaG4xaWJYZzV6aWVhenFnQkdkU1NldkcrWkY0ckhqMW9HcnZrWHZYUEhqT3FRcEs1OHJIWgpyRCtFdEwrVkJ3aGp2SFZTMW01cnVsRlRQbTNEck1IWDdVMU0vT0VVamo4TlBUdUcrb1RzNGhhd1JmVU00TXlLCjJyTDBIOGZ1Q1RvQmRHTko1L0tnOEZNQ2dZQkhkZUZoTDd1NjNtMXNmVGI5eUptMVZvb0pNc2ZtOFBFS3NSU3EKc2N3VWNIS0ppZEZqalBnaFdSZCt4b0duV2ZybWUxeHMrTG51QUpqN3krREdCY3I4QWxjTmU1d3YreGplVThVSApnK2IyTktRU3l0WklDK3diZVF4SkdESTI0L3k3Q2hBbjJmMzdsNThaRlU1bTA0cVUwMXVudG93dGlUbVJVeVNBCkRYbG1rUUtCZ1FDbC8yemU4dFJrTWJHeVhEWFpCY2N2RUlUSDBNcjA0T09KZFhiQis4VnFSTXpMeWtyUE03U3kKbnNmWVovNnBWOXVlT2w3d21nZytoZUIxeFBOTmtLWUg3a09LMUNqdE5iWkJTcUZvdkxSaEQ3UzhrTFcwUHVoSwpNajN0VTZmUTluV1dDK0g1WTNWVGRWZFFTTkVaVlQ5VXVZNUUrV1NKWG9hWU5IMm9hdHkyMkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
type: kubernetes.io/tls
