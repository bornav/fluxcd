---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: traefik
spec:
  interval: 15m
  chart:
    spec:
      chart: traefik
      version: 34.2.0 #chart version not app
      sourceRef:
        kind: HelmRepository
        name: traefik
        namespace: flux-system
      interval: 15m
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    globalArguments:
      - '--global.sendanonymoususage=false'
      - '--global.checknewversion=false'
    additionalArguments:
      - '--serversTransport.insecureSkipVerify=true'
      - "--api.insecure=true"
    deployment:
      enabled: true
      # kind: DaemonSet
      kind: Deployment
      replicas: 3
      terminationGracePeriodSeconds: 10
      minReadySeconds: 2
      podLabels:
        nat-policy: "enabled"
    ports:
      traefik:
        port: 8001
    #   web:
    #     port: 8000
    #     redirectTo:
    #       port: websecure
    #   websecure:
    #     port: 8443
    #     exposedPort: 8443
    #     tls:
    #       enabled: true
    #     http3:
    #       enabled: true
    gateway:
      listeners:
        web:
          namespacePolicy: All
        websecure:
          port: 8443
          hostname: "*.icylair.com"
          protocol: HTTPS
          namespacePolicy: All
          certificateRefs: 
            - kind: Secret
              # group: ""
              name: "icylair-com-all-prod"
    service:
      single: true
      spec:
        loadBalancerIP: "10.49.21.1"
      labels: 
        service-type: ingress
        
    ingressClass:
      enabled: true
      isDefaultClass: true
      name: &ingress-class-name traefik-external
    ingressRoute:
      dashboard:
        enabled: true
        # annotations:
        #   traefik.ingress.kubernetes.io/router.middlewares: network-forward-auth@kubernetescrd
    #       # traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #       # traefik.ingress.kubernetes.io/router.middlewares: network-traefik-dashboard-auth@kubernetescrd
        # matchRule: PathPrefix(`/`)
        matchRule: Host(`traefik.cloud.icylair.com`)
        entryPoints: ["websecure"]
        middlewares: 
          - name: "forward-auth"
        # tls:
        #   - hosts:
        #       - traefik.cloud.icylair.com
        #     secretName: icylair-com-all-prod
    ###########################################################################
    extraObjects:
      - apiVersion: traefik.io/v1alpha1
        kind: Middleware
        metadata:
          name: forward-auth
        spec:
          forwardAuth:
            address: "http://traefik-forward-auth.network.svc.cluster.local:4181"
            trustForwardHeader: true
            authResponseHeaders:
              - "X-Forwarded-User"
              # - "X-Auth-User"
              # - "X-Secret"
    #   - apiVersion: v1
    #     kind: Service
    #     metadata:
    #       name: traefik-api
    #     spec:
    #       type: ClusterIP
    #       selector:
    #         app.kubernetes.io/name: traefik
    #         app.kubernetes.io/instance: traefik-network
    #       ports:
    #       - port: 8080
    #         name: traefik
    #         targetPort: 9000
    #         protocol: TCP

    #   - apiVersion: traefik.io/v1alpha1
    #     kind: Middleware
    #     metadata:
    #       name: traefik-dashboard-auth
    #     spec:
    #       basicAuth:
    #         secret: traefik-dashboard-auth-secret

    #   - apiVersion: traefik.io/v1alpha1
    #     kind: Middleware
    #     metadata:
    #       name: https-redirect
    #     spec:
    #       redirectScheme:
    #         scheme: https
    #         permanent: true

    #   - apiVersion: networking.k8s.io/v1
    #     kind: Ingress
    #     metadata:
    #       name: traefik-dashboard
    #       annotations:
    #         traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    #         # traefik.ingress.kubernetes.io/router.middlewares: network-traefik-dashboard-auth@kubernetescrd
    #         traefik.ingress.kubernetes.io/router.middlewares: "network-forward-auth@kubernetescrd"
    #     spec:
    #       ingressClassName: traefik-external
    #       rules:
    #       - host: traefik.cloud.icylair.com
    #         http:
    #           paths:
    #           - path: /
    #             pathType: Prefix
    #             backend:
    #               service:
    #                 name: traefik-api
    #                 port:
    #                   name: traefik
    #       tls:
    #       - hosts:
    #           - traefik.cloud.icylair.com
    #         secretName: icylair-com-all-prod
    ###########################################################################
    providers:
      kubernetesCRD:
        enabled: true
        ingressClass: *ingress-class-name 
        allowExternalNameServices: true
      kubernetesGateway:
        enabled: true
      kubernetesIngress:
        enabled: true
        allowExternalNameServices: true
        # publishedService:
        #   enabled: false
      file:
        # -- Create a file provider
        enabled: true
        # -- Allows Traefik to automatically watch for file changes
        watch: true
        # -- File content (YAML format, go template supported) (see https://doc.traefik.io/traefik/providers/file/)
        # content: # TODO look how to set this
        #   tracing:
        #     otlp:
        #       http:
        #         endpoint: http://opentelemetry-collector.observability.svc.cluster.local:4318/v1/traces
    rbac:
      enabled: true
    tlsStore:
      default:
        defaultCertificate:
          secretName: icylair-com-all-prod
    # service:
    # #   enabled: true
    # #   type: LoadBalancer
    # #   annotations: {}
    # #   labels: {}
    #   spec:
    #     externalTrafficPolicy: Local
    # #     # loadBalancerIP: 10.99.20.230
    # #     #loadBalancerIP: 10.0.0.72 # this should be an IP in the MetalLB range
    # #   loadBalancerSourceRanges: []
    # #   externalIPs: []
    logs:
      general:
        # levels are DEBUG, PANIC, FATAL, ERROR, WARN, and INFO.
        level: DEBUG
    resources:
      requests:
        memory: '1Mi'
        cpu: '1m'
      limits:
        memory: '6Gi'
        cpu: '3000m'
    tracing:
      otlp:
        enabled: true
        http:
          enabled: true
          # http://opentelemetry-collector.observability.svc.cluster.local:4318/v1/traces
          endpoint: http://opentelemetry-collector.observability.svc.cluster.local:4318/v1/traces
    experimental:
      # -- Enable traefik experimental plugins
      plugins:
        traefik-api-key-auth:
          moduleName: "github.com/Septima/traefik-api-key-auth"
          version: "v0.3.0"
    env:
    - name: OTEL_PROPAGATORS
      value: tracecontext,baggage,b3,jaeger