apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: &name net-forwarder
  labels:
    app: *name
spec:
  selector:
    matchLabels:
      app: *name
  template:
    metadata:
      labels:
        app: *name
    spec:
      nodeSelector:
        nat-policy: "enabled"
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchFields:
      #         - key: metadata.name
      #           operator: In
      #           values:
      #           - oracle-km1-1
      #           # - instance-arm-01
      shareProcessNamespace: true
      containers:
      # - name: net-forwarder-traefik-ingress
      #   image: bornav/tcpforwarder:v0.4
      #   # command: ["/bin/sh"]  # Override the entrypoint
      #   # args: ["-c", "sleep 9999" ] 
      #   env:
      #   - name: LISTEN_HOST
      #     value: "0.0.0.0"
      #   - name: LISTEN_PORT
      #     value: "80,443"
      #   - name: REMOTE_HOST
      #     value: "traefik.network.svc.cluster.local"
      #   # - name: REMOTE_PORT
      #   #   value: "8443"
      #   - name: DIAL_TIMEOUT
      #     value: "4"
      #   imagePullPolicy: Always
      #   ports:
      #   - containerPort: 80
      #     hostPort: 80
      #   - containerPort: 443
      #     hostPort: 443
      #   resources:
      #     limits:
      #       cpu: 500m
      #       memory: 512Mi
      #     requests:
      #       cpu: 1m
      #       memory: 1Mi
      #   securityContext:
      #     # runAsGroup: 1000
      #     runAsUser: 0
      #     privileged: true
      - name: net-forwarder-nginx-ingress
        # image: harbor.icylair.com/library/tcpforwarder:v0.1-test
        image: bornav/tcpforwarder:v0.4
        # command: ["/bin/sh"]  # Override the entrypoint
        # args: ["-c", "sleep 9999" ] 
        env:
        - name: LISTEN_HOST
          value: "0.0.0.0"
        - name: LISTEN_PORT
          value: "8081,8444,9443,10000" # actual ports are 8080.8443,9443,10000
        - name: REMOTE_HOST
          value: "nginx-external-controller.network.svc.cluster.local"
        # - name: REMOTE_PORT
        #   value: "9987"
        - name: DIAL_TIMEOUT
          value: "4"
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          hostPort: 8080
        - containerPort: 8444
          hostPort: 8443
        - containerPort: 9443
          hostPort: 9443
        - containerPort: 10000
          hostPort: 10000
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          # runAsGroup: 1000
          runAsUser: 0
          privileged: true

      - name: net-forwarder-teamspeak
        # image: harbor.icylair.com/library/tcpforwarder:v0.1-test
        image: bornav/tcpforwarder:v0.4
        # command: ["/bin/sh"]  # Override the entrypoint
        # args: ["-c", "sleep 9999" ] 
        env:
        - name: LISTEN_HOST
          value: "0.0.0.0"
        - name: LISTEN_PORT
          value: "9987,10011,30033"
        - name: REMOTE_HOST
          # value: "teamspeak.apps.svc.cluster.local"
          value: "traefik-udp.network.svc.cluster.local"
        # - name: REMOTE_PORT
        #   value: "9987"
        - name: DIAL_TIMEOUT
          value: "4"
        imagePullPolicy: Always
        ports:
        - containerPort: 9987
          hostPort: 9987
          protocol: UDP
        - containerPort: 10011
          hostPort: 10011
        - containerPort: 30033
          hostPort: 30033
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          # runAsGroup: 1000
          runAsUser: 0
          privileged: true
      
      - name: net-forwarder-other
        # image: harbor.icylair.com/library/tcpforwarder:v0.1-test
        image: bornav/tcpforwarder:v0.4
        # command: ["/bin/sh"]  # Override the entrypoint
        # args: ["-c", "sleep 9999" ] 
        env:
        - name: LISTEN_HOST
          value: "0.0.0.0"
        - name: LISTEN_PORT
          value: "14000-14006"
        - name: REMOTE_HOST
          value: "wireguard.network.svc.cluster.local"
        # - name: REMOTE_PORT
        #   value: "9987"
        - name: DIAL_TIMEOUT
          value: "4"
        imagePullPolicy: Always
        ports:
        - containerPort: 14000
          hostPort: 14000
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 1m
            memory: 1Mi
        securityContext:
          # runAsGroup: 1000
          runAsUser: 0
          privileged: true
      # - name: go-instrumentation-sidecart
      #   image: otel/autoinstrumentation-go:v0.14.0-alpha
      #   imagePullPolicy: IfNotPresent
      #   env:
      #     - name: OTEL_GO_AUTO_TARGET_EXE
      #       value: /usr/bin/tcpforwarder
      #     - name: OTEL_EXPORTER_OTLP_ENDPOINT
      #       value: "https://otel-col.cloud.icylair.com"
      #     - name: OTEL_SERVICE_NAME
      #       value: "net-forwarder"
      #     - name: OTEL_PROPAGATORS
      #       value: "tracecontext,baggage"
      #     - name: OTEL_GO_AUTO_SHOW_VERIFIER_LOG
      #       value: "true"
      #     - name: OTEL_GO_AUTO_GLOBAL
      #       value: "true"
      #   securityContext:
      #     runAsUser: 0
      #     privileged: true
      
      # - name: dns-ip-update
      #   # command: ["/bin/sh"]  # Override the entrypoint
      #   # args: ["-c", "sleep 9999" ] 
      #   image: qmcgaw/ddns-updater:v2.7.0 # TODO test what is correct imave version
      #   env:
      #   - name: TIME_ZONE
      #     value: Europe/Vienna
      #   - name: CONFIG_FILEPATH
      #     value: "/config.json"
      #   imagePullPolicy: IfNotPresent
      #   resources:
      #     limits:
      #       cpu: 500m
      #       memory: 128Mi
      #     requests:
      #       cpu: 1m
      #       memory: 64Mi
      #   volumeMounts:
      #   - mountPath: /config.json
      #     name: config
      #     subPath: config.json
      # - name: beyla
      #   image: grafana/beyla:latest
      #   securityContext: # Privileges are required to install the eBPF probes
      #     privileged: true
      #   env:
      #     # The internal port of the goblog application container
      #     - name: BEYLA_OPEN_PORT
      #       value: "8443"
      #     - name: OTEL_EXPORTER_OTLP_ENDPOINT
      #       value: "http://grafana-alloy:4318"
      #       # required if you want kubernetes metadata decoration
      #     - name: BEYLA_KUBE_METADATA_ENABLE
      #       value: "true"
      #   volumeMounts:
      #     - mountPath: /etc/beyla/config
      #       name: beyla-config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 1
      # volumes:
      # - name: beyla-config
      #   configMap:
      #     defaultMode: 420
      #     name: beyla-config
# ---
# apiVersion: traefik.io/v1alpha1
# kind: IngressRouteUDP
# metadata:
#    name: ingressrouteudpfoo
#   #  namespace: network
# spec:
#   entryPoints:
#      - udp
#   routes:
#   - services:
#     - name: teamspeak
#       port: 9988
#       weight: 10
#       # nativeLB: true
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: beyla-config
data:
  beyla-config.yml: |
    log_level: INFO
    routes:
      unmatched: heuristic
    trace_printer: text
    otel_traces_export:
      endpoint: http://opentelemetry-collector.observability.svc.cluster.local:4318/v1/traces
    attributes:
      kubernetes:
        enable: true
