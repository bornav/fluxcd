apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  loadBalancerIP: 10.0.0.232
  ports:
    - name: http
      port: 8080
      targetPort: 8080
  selector:
    app: keycloak
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:24.0.4
          args: ["start"]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: KEYCLOAK_ADMIN
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: KEYCLOAK_ADMIN_PASSWORD
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_USER
            - name: DB
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_DB
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_PASS
            - name: DB_URL
              value: "jdbc:postgresql://postgres:5432/postgresql?ssl=allow"
            - name: KC_PROXY
              value: "edge"
            - name: KC_PROXY_ADDRESS_FORWARDING
              value: "true"
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HOSTNAME
              value: "keycloak.cloud.icylair.com"
            - name: KC_HTTP_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '10Gi'
              cpu: '3000m'
          readinessProbe:
            httpGet:
              path: /realms/master
              port: 8080
          # volumeMounts:
            # - name: keycloak-data
              # mountPath: /opt  # Path in the pod where the PVC data will be mounted
          #     subPath: keycloak  # Path within the PVC to be mounted
        - name: databases
          image: postgres:16.1-alpine
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_USER
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_DB
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-auth
                  key: PGR_PASS
          ports:
            - containerPort: 5432
          readinessProbe:
            exec:
              command: ["pg_isready", "-U", "$POSTGRES_USER"]
            initialDelaySeconds: 0
            timeoutSeconds: 2
          livenessProbe:
            exec:
              command: ["pg_isready", "-U", "$POSTGRES_USER"]
            initialDelaySeconds: 0
            timeoutSeconds: 2
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '10Gi'
              cpu: '3000m'
          volumeMounts:
            - name: keycloak-data
              mountPath: /data  # Path in the pod where the PVC data will be mounted
              subPath: database  # Path within the PVC to be mounted
      restartPolicy: Always
      volumes:
        - name: keycloak-data
          persistentVolumeClaim:
            claimName: keycloak-data