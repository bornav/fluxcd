# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: &name keycloak-data
#   labels:
#     app: *name 
#   annotations:
#     numberOfReplicas: '1'
# spec:
#   accessModes:
#     - ReadWriteMany
#   storageClassName: longhorn-storage-rwm
#   dataSourceRef:
#     kind: ReplicationDestination
#     apiGroup: volsync.backube
#     name: keycloak-data-restore  # Name of the ReplicationDestination
#   resources:
#     requests:
#       storage: 1Gi
# status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: data-keycloak-postgresql-0
  labels:
    app.kubernetes.io/component: primary
    app.kubernetes.io/instance: keycloak
    app.kubernetes.io/name: postgresql
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: longhorn-storage-rwm
  dataSourceRef:
    kind: ReplicationDestination
    apiGroup: volsync.backube
    name: keycloak-data-restore  # Name of the ReplicationDestination
  resources:
    requests:
      storage: 1Gi
status: {}
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationSource
metadata:
  name:  keycloak-data-backup
spec:
  sourcePVC: data-keycloak-postgresql-0
  trigger:
    schedule: "*/31 * * * *"
  restic:
    pruneIntervalDays: 1
    repository: restic-keycloak-data
    retain:
      hourly: 5
      daily: 4
      weekly: 3
      monthly: 2
      yearly: 1
    copyMethod: Snapshot
    storageClassName: longhorn-storage-rwm
    unlock: "something"
---
apiVersion: volsync.backube/v1alpha1
kind: ReplicationDestination
metadata:
  name: keycloak-data-restore
spec:
  trigger:
    manual: restore-once
  restic:
    repository: restic-keycloak-data
    storageClassName: longhorn-storage-rwm
    accessModes: ["ReadWriteMany"]
    copyMethod: Snapshot
    capacity: 1Gi
    # previous: 2