apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
spec:
  interval: 30m
  timeout: 5m
  chart:
    spec:
      chart: harbor
      version: 1.15.0
      sourceRef:
        kind: HelmRepository
        name: harbor
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    externalURL: https://harbor.cloud.icylair.com
    expose:
      tls:
        enabled: true
        # # tls certificate is configured in the ingress controller, choose this option
        certSource: secret
        secret: 
          secretName: "icylair-com-all-prod"
      ingress:
        ingressClassName: traefik-external
        hosts: 
          core: harbor.cloud.icylair.com
        # annotations:
        #   traefik.ingress.kubernetes.io/router.middlewares: network-forward-auth@kubernetescrd
    persistence:
      enabled: true ##temp
      persistentVolumeClaim:
        registry:
          # Use the existing PVC which must be created manually before bound,
          # and specify the "subPath" if the PVC is shared with other components
          existingClaim: "harbor-data"
        imageChartStorage:
          disableredirect: true
          type: s3
          s3:
            # Set an existing secret for S3 accesskey and secretkey
            # keys in the secret should be REGISTRY_STORAGE_S3_ACCESSKEY and REGISTRY_STORAGE_S3_SECRETKEY for registry
            existingSecret: "harbor-s3-secret"
            region: us-west-1
            bucket: harbor
            regionendpoint: http://wireguard.network.svc.cluster.local:9010
            #encrypt: false
            #keyid: mykeyid
            #secure: true
            #skipverify: false
            #v4auth: true
            #chunksize: "5242880"
            rootdirectory: /
            #storageclass: STANDARD
            #multipartcopychunksize: "33554432"
            #multipartcopymaxconcurrency: 100
            #multipartcopythresholdsize: "33554432"
            
    tolerations-and-nodelectors: &tolerations-and-nodelectors
      tolerations: 
        - key: node-role.kubernetes.io/master
          value: "true"
          effect: NoSchedule
      nodeSelector:
        kubernetes.io/arch: amd64
    portal:
      <<: *tolerations-and-nodelectors
    core:
      <<: *tolerations-and-nodelectors
    jobservice:
      <<: *tolerations-and-nodelectors
    registry:
      <<: *tolerations-and-nodelectors
    trivy:
      <<: *tolerations-and-nodelectors
    database:
      internal:
        <<: *tolerations-and-nodelectors
    redis:
      internal:
        <<: *tolerations-and-nodelectors