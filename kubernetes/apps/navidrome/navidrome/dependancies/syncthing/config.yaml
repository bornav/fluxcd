---
apiVersion: v1
data:
  syncthing-setup-folder.sh: |
    #!/bin/sh
    # share 
    export API_PORT="8384"
    export API_KEY=$(syncthing cli --home /config config gui apikey get)
    export REMOTE="https://wireguard.network.svc.cluster.local:$API_PORT/rest"
    export LOCAL="https://localhost:$API_PORT/rest"
    export LOCAL_ENDPOINT_GET="curl -k -X GET -H 'X-API-Key: $API_KEY' $LOCAL"
    export REMOTE_ENDPOINT_GET="curl -k -X GET -H 'X-API-Key: $home_local_device_api' $REMOTE"
    export LOCAL_ENDPOINT_POST="curl -k -X POST -H 'X-API-Key: $API_KEY' $LOCAL"
    export REMOTE_ENDPOINT_POST="curl -k -X POST -H 'X-API-Key: $home_local_device_api' $REMOTE"
    export LOCAL_ENDPOINT_PUT="curl -k -X PUT -H 'X-API-Key: $API_KEY' $LOCAL"
    export REMOTE_ENDPOINT_PUT="curl -k -X PUT -H 'X-API-Key: $home_local_device_api' $REMOTE"
    export LOCAL_API_H="-H 'X-API-Key: $API_KEY'"
    export REMOTE_API_H="-H 'X-API-Key: $home_local_device_api'"
    export LOCAL_DEVICE_ID=$(eval $LOCAL_ENDPOINT_GET/config | jq .defaults.folder.devices[0].deviceID)
    export REMOTE_DEVICE_ID=$(eval $REMOTE_ENDPOINT_GET/config | jq .defaults.folder.devices[0].deviceID)
    export TARGET_FOLDER=$()
    #get folder in question
    #eval $REMOTE_ENDPOINT_GET/config/folders | jq '.[] | select(.label == "navidrome-music")'
    #add remote to local device
    eval "curl -k -X GET $REMOTE_API_H  $REMOTE/config/devices/$REMOTE_DEVICE_ID > config.json"
    eval "curl -k -X POST $LOCAL_API_H -H 'Content-Type: application/json' -d @../config.json $LOCAL/config/devices"
    #add local to remote device
    eval "curl -k -X GET $LOCAL_API_H  $LOCAL/config/devices/$LOCAL_DEVICE_ID > config.json"
    eval "curl -k -X POST $REMOTE_API_H -H 'Content-Type: application/json' -d @../config.json $REMOTE/config/devices"
    #add remote folder localy
    eval $REMOTE_ENDPOINT_GET/config/folders | jq '.[] | select(.label == "navidrome-music")' | jq '.path = "/music"' > config.json
    eval "curl -k -X POST $LOCAL_API_H -H 'Content-Type: application/json' -d @../config.json $LOCAL/config/folders"
    eval "$REMOTE_ENDPOINT_GET/cluster/pending/folders" # todo mby wait here for pending request to pop out

    #get both shared folders/device/combo id-s
    eval "curl -k -X GET $REMOTE_API_H -H 'Content-Type: application/json' $REMOTE/config/folders" > config_remote.json
    eval "curl -k -X GET $LOCAL_API_H -H 'Content-Type: application/json' $LOCAL/config/folders" > config_local.json
    NEW_DEVICES=$(jq '.[] | select(.label == "navidrome-music").devices' config_local.json)
    jq --argjson val "$NEW_DEVICES" 'map(select(.label == "navidrome-music").devices = $val) ' config_remote.json | jq '.[] | select(.label == "navidrome-music")' > config.json
    eval "curl -k -X POST $REMOTE_API_H -H 'Content-Type: application/json' -d @../config.json $REMOTE/config/folders"
    #jq '.[] | select(.label == "navidrome-music")' config_local.json geting both values
    #cat config_local.json | jq '.[] | select(.label == "navidrome-music")'  | jq .devices
    # eval "curl -k -X GET $REMOTE_API_H -H 'Content-Type: application/json' -d @../config.json $REMOTE/config/folders" > config_remote.json
    # curl -k -X GET -H "X-API-Key: $home_local_device_api" https://wireguard.network.svc.cluster.local:8384/rest/config/options
    # syncthing cli --home /config config gui apikey get
    # export API_KEY=$(syncthing cli --home /config config gui apikey get)

kind: ConfigMap
metadata:
  name: syncthing-setup-folder