---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wireguard
  labels:
    app: wireguard
spec:
  selector:
    matchLabels:
      name: wireguard
  template:
    metadata:
      labels:
        name: wireguard
    spec:
      initContainers:
        - name: 'wireguard-template-replacement'
          image: 'busybox'
          command:
            [
              'sh',
              '-c',
              'ENI=$(ip route get 8.8.8.8 | grep 8.8.8.8 | awk ''{print $5}''); sed "s/ENI/$ENI/g" /etc/wireguard-secret/wg0.conf.template > /etc/wireguard/wg0.conf; chmod 400 /etc/wireguard/wg0.conf',
            ]
          volumeMounts:
            - name: wireguard-config
              mountPath: /etc/wireguard/
            - name: wireguard-secret
              mountPath: /etc/wireguard-secret/
      containers:
        - name: 'wireguard'
          image: 'linuxserver/wireguard:v1.0.20210914-ls118'
          ports:
            - containerPort: 51820
          env:
            - name: 'TZ'
              value: 'Europe/Vienna'
            - name: 'HOSTADDR'
              value: '10.0.0.0/8'
          volumeMounts:
            - name: wireguard-config
              mountPath: /config/wg0.conf
              subPath: wg0.conf
              #mountPath: /etc/wireguard/
              readOnly: true
          resources:
            requests:
              memory: '1Mi'
              cpu: '1m'
            limits:
              memory: '6Gi'
              cpu: '2500m'
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: wireguard-config
          emptyDir: {}
        - name: wireguard-secret
          secret:
            secretName: wireguard
      imagePullSecrets:
        - name: docker-registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: navidrome-2
  labels:
    app: navidrome-app-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: navidrome-app-2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        # io.kompose.network/dockerfile-default: "true"
        app: navidrome-app-2
    spec:
      containers:
        - image: deluan/navidrome:0.49.3
          name: navidrome
          env:
            - name: ND_CONFIGFILE
              value: '/config/navidrome.toml'
          resources:
            limits:
              cpu: 1000m
              memory: 500M
          volumeMounts:
            - mountPath: /config/navidrome.toml
              name: navidrome-configuration
              subPath: navidrome.toml
            - mountPath: /data/music
              name: navidrome-music-folder
      volumes:
        - name: navidrome-configuration
          configMap:
            name: navidrome-config
        - name: navidrome-music-folder
          nfs:
            server: wireguard.navidrome.svc.cluster.local
            path: /mnt/Vega/MultiMedia/MusicLibrary/METAL
      restartPolicy: Always
status: {}
