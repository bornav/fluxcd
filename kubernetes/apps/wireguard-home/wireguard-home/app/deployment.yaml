---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wireguard
  labels:
    app: wireguard
spec:
  selector:
    matchLabels:
      name: wireguard
  template:
    metadata:
      labels:
        name: wireguard
    spec:
      initContainers:
        # The exact name of the network interface needs to be stored in the
        # wg0.conf WireGuard configuration file, so that the routes can be
        # created correctly.
        # The template file only contains the "ENI" placeholder, so when
        # bootstrapping the application we'll need to replace the placeholder
        # and create the actual wg0.conf configuration file.
        - name: 'wireguard-template-replacement'
          image: 'busybox'
          command:
            [
              'sh',
              '-c',
              'ENI=$(ip route get 8.8.8.8 | grep 8.8.8.8 | awk ''{print $5}''); sed "s/ENI/$ENI/g" /etc/wireguard-secret/wg0.conf.template > /etc/wireguard/wg0.conf; chmod 400 /etc/wireguard/wg0.conf',
            ]
          volumeMounts:
            - name: wireguard-config
              mountPath: /etc/wireguard/
            - name: wireguard-secret
              mountPath: /etc/wireguard-secret/
      containers:
        - name: 'wireguard'
          image: 'linuxserver/wireguard:latest'
          ports:
            - containerPort: 51820
          env:
            - name: 'TZ'
              value: 'Europe/Vienna'
            - name: 'HOSTADDR'
              value: '10.0.0.0/8'
          volumeMounts:
            - name: wireguard-config
              mountPath: /config/wg0.conf
              subPath: wg0.conf
              #mountPath: /etc/wireguard/
              readOnly: true
          resources:
            limits:
              memory: '10Gi'
              cpu: '2500m'
          securityContext:
            privileged: true
            capabilities:
              add:
                - NET_ADMIN
      volumes:
        - name: wireguard-config
          emptyDir: {}
        - name: wireguard-secret
          secret:
            secretName: wireguard
      imagePullSecrets:
        - name: docker-registry
# --- Unneeded?
# apiVersion: v1
# kind: Service
# metadata:
#   name: wireguard
#   annotations:
#     dns.alpha.kubernetes.io/external: wireguard.test.svc.cluster.local
# spec:
#   selector:
#     name: wireguard
#   ports:
#     # - name: wireguard
#     #   port: 51820
#     #   targetPort: 51820
#     - name: http
#       port: 5800
#       targetPort: 5800
#     - name: nfs
#       port: 2049
#       targetPort: 2049
#     - name: portmapper
#       port: 111
#       targetPort: 111
#     # - name: http
#     #   port: 80
#     #   targetPort: 80
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: allow-wireguard
# spec:
#   podSelector:
#     matchLabels:
#       name: wireguard2
#   policyTypes:
#   - Egress
#   egress:
#   - to:
#     - ipBlock:
#         cidr: 10.2.11.0/24
#     # ports:
#     # - protocol: UDP
#     #   port: 51820
#   # logging: true
# ---
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: wireguard
#   annotations:
#     kubernetes.io/ingress.class: nginx-external
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - match: Host(`qbit.cloud.icylair.com`)
#       kind: Rule
#       services:
#         - name: wireguard
#           port: 5800
#       # middlewares:
#       #   - name: default-headers
#   tls:
#     secretName: cloud-icylair-com-prod
