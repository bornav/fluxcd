# {% if cilium_installed.rc != 0 %}
# cilium install
# {% else %}
# cilium upgrade
# {% endif %}
# --version "{{ cilium_tag }}"
# --helm-set operator.replicas="1"
# {{ '--helm-set devices=' + cilium_iface if cilium_iface != 'auto' else '' }}
# --helm-set ipam.operator.clusterPoolIPv4PodCIDRList={{ cluster_cidr }}
# {% if cilium_mode == "native" or (cilium_bgp and cilium_exportPodCIDR != 'false') %}
# --helm-set ipv4NativeRoutingCIDR={{ cluster_cidr }}
# {% endif %}
# --helm-set k8sServiceHost="127.0.0.1"
# --helm-set k8sServicePort="6444"
# --helm-set routingMode={{ cilium_mode | default("native") }}
# --helm-set autoDirectNodeRoutes={{ "true" if cilium_mode == "native" else "false" }}
# --helm-set kubeProxyReplacement={{ kube_proxy_replacement | default("true") }}
# --helm-set bpf.masquerade={{ enable_bpf_masquerade | default("true") }}
# --helm-set bgpControlPlane.enabled={{ cilium_bgp | default("false") }}
# --helm-set hubble.enabled={{ "true" if cilium_hubble else "false" }}
# --helm-set hubble.relay.enabled={{ "true" if cilium_hubble else "false" }}
# --helm-set hubble.ui.enabled={{ "true" if cilium_hubble else "false" }}
# {% if kube_proxy_replacement is not false %}
# --helm-set bpf.loadBalancer.algorithm={{ bpf_lb_algorithm | default("maglev") }}
# --helm-set bpf.loadBalancer.mode={{ bpf_lb_mode | default("hybrid") }}
operator:
  replicas: 1
# devices: "wg1" ?
ipam:
  operator:
    clusterPoolIPv4PodCIDRList: '10.52.0.0/16'
ipv4NativeRoutingCIDR: '10.52.0.0/16'
k8sServiceHost: "127.0.0.1"
k8sServicePort: "6444"
routingMode: "native"
autoDirectNodeRoutes: false
kubeProxyReplacement: true
bpf:
  masquerade: true
  loadBalancer:
    algorithm: "maglev"
    mode: "hybrid"
bgpControlPanel:
  enable: true
hubble:
  enable: true
  relay:
    enable: true
  ui:
    enable: true


